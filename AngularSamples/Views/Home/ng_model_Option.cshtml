<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Example - example-ngModelOptions-directive-blur-production</title>

    <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.4.0-beta.5/angular.min.js"></script>
    <script src="~/app2.js"></script>


</head>
<body ng-app="optionsExample">
    <div ng-controller="ExampleController">
        <form name="userForm">
            Name:
            <input type="text" name="userName"
                   ng-model="user.name"
                   ng-model-options="{ updateOn: 'blur' }" @*update the data i.e--user.name ,when there is a blur effect executed*@
                   ng-keyup="cancel($event)" /><br />
            Other data:
            <input type="text" ng-model="user.data" /><br />
        </form>
        <pre>user.name = <span ng-bind="user.name"></span></pre>
    </div>
</body>
</html>
@*options to apply to the current model. Valid keys are:
    •updateOn: string specifying which event should the input be bound to. 
    You can set several events using an space delimited list. 
    There is a special event called default that matches the default events belonging of the control.
    •debounce: integer value which contains the debounce model update value in milliseconds. 
    A value of 0 triggers an immediate update. If an object is supplied instead, 
    you can specify a custom value for each event. For example: ng-model-options="{ updateOn: 'default blur', debounce: {'default': 500, 'blur': 0} }"
    •allowInvalid: boolean value which indicates that the model can be set with values that did not 
    validate correctly instead of the default behavior of setting the model to undefined.
    •getterSetter: boolean value which determines whether or not to treat functions bound to ngModel as getters/setters.
    •timezone: Defines the timezone to be used to read/write the Date instance in the model for <input type="date">,
     <input type="time">, ... . It understands UTC/GMT and the continental US time zone abbreviations,
     but for general use, use a time zone offset, for example, '+0430' (4 hours, 30 minutes east of the Greenwich meridian) If not specified, 
    the timezone of the browser will be used.
*@